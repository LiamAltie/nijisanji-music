name: Deploy Sanity Studio on Change

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "sanity/**"
      - ".github/slack/**"

jobs:
  deploy-sanity:
    runs-on: ubuntu-latest
    steps:
      - name: コードのチェックアウト
        uses: actions/checkout@v4

      - name: Slack通知に必要な変数の準備
        id: prep_vars
        run: |
          echo "WORKFLOW_NAME=${{ github.workflow }}" >> $GITHUB_ENV
          echo "REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
          echo "REF_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "ACTOR=${{ github.actor }}" >> $GITHUB_ENV
          echo "EVENT_NAME=${{ github.event_name }}" >> $GITHUB_ENV
          echo "RUN_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: 開始ペイロードの生成
        id: slack_payload_start
        run: |
          JSON_PAYLOAD=$(envsubst < '.github/slack/start-payload.template.json' | jq -c .)
          if [ -z "$JSON_PAYLOAD" ]; then echo "Error: Generated JSON payload is empty."; exit 1; fi
          echo "payload=$JSON_PAYLOAD" >> $GITHUB_OUTPUT

      - name: ワークフローの開始をSlackに通知
        if: always()
        env:
          SLACK_PAYLOAD: ${{ steps.slack_payload_start.outputs.payload }}
          SLACK_WEBHOOK_SECRET_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -z "$SLACK_WEBHOOK_SECRET_URL" ]; then echo "Error: SLACK_WEBHOOK_URL secret is not set."; exit 1; fi
          if [ -z "$SLACK_PAYLOAD" ]; then echo "Error: Slack payload is empty."; exit 1; fi
          curl -X POST -H 'Content-type: application/json' \
          --data "$SLACK_PAYLOAD" \
          "$SLACK_WEBHOOK_SECRET_URL"

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Sanity CLIと依存関係のインストール
        run: npm install

      - name: Sanity Studioのデプロイ
        run: npx sanity deploy --non-interactive
        env:
          SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
          SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
          SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}

      - name: 成功ペイロードの生成
        id: slack_payload_success
        if: success()
        run: |
          JSON_PAYLOAD=$(envsubst < '.github/slack/success-payload.template.json' | jq -c .)
          if [ -z "$JSON_PAYLOAD" ]; then echo "Error: Generated JSON payload is empty."; exit 1; fi
          echo "payload=$JSON_PAYLOAD" >> $GITHUB_OUTPUT

      - name: ワークフローの成功をSlackに通知
        if: success()
        env:
          SLACK_PAYLOAD: ${{ steps.slack_payload_success.outputs.payload }}
          SLACK_WEBHOOK_SECRET_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -z "$SLACK_WEBHOOK_SECRET_URL" ]; then echo "Error: SLACK_WEBHOOK_URL secret is not set."; exit 1; fi
          if [ -z "$SLACK_PAYLOAD" ]; then echo "Error: Slack payload is empty."; exit 1; fi
          curl -X POST -H 'Content-type: application/json' \
          --data "$SLACK_PAYLOAD" \
          "$SLACK_WEBHOOK_SECRET_URL"

      - name: 失敗ペイロードの生成
        id: slack_payload_failure
        if: failure()
        run: |
          JSON_PAYLOAD=$(envsubst < '.github/slack/failure-payload.template.json' | jq -c .)
          if [ -z "$JSON_PAYLOAD" ]; then echo "Error: Generated JSON payload is empty."; exit 1; fi
          echo "payload=$JSON_PAYLOAD" >> $GITHUB_OUTPUT

      - name: ワークフローの失敗をSlackに通知
        if: failure()
        env:
          SLACK_PAYLOAD: ${{ steps.slack_payload_failure.outputs.payload }}
          SLACK_WEBHOOK_SECRET_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -z "$SLACK_WEBHOOK_SECRET_URL" ]; then echo "Error: SLACK_WEBHOOK_URL secret is not set."; exit 1; fi
          if [ -z "$SLACK_PAYLOAD" ]; then echo "Error: Slack payload is empty."; exit 1; fi
          curl -X POST -H 'Content-type: application/json' \
          --data "$SLACK_PAYLOAD" \
          "$SLACK_WEBHOOK_SECRET_URL"
