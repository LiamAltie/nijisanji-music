name: Deploy Sanity Studio on Change

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - "sanity/**"
      - ".github/slack/**"

env:
  # Sanity credentials
  SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
  SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
  SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}
  # Slack webhook URL
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  deploy-sanity:
    name: Deploy Sanity Studio
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Shared Slack notification step
      - &slack_notify
        name: Send Slack Notification
        run: |
          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "Error: SLACK_WEBHOOK_URL is not set" >&2
            exit 1
          fi
          curl -s -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" \
            "$SLACK_WEBHOOK_URL"

      # Start notification
      - name: Prepare Start Payload
        id: slack_start
        run: |
          PAYLOAD=$(jq -n --arg repo "$GITHUB_REPOSITORY" \
                         --arg ref "$GITHUB_REF_NAME" \
                         --arg url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}}" \
                         '{text: ":rocket: Sanity Studio deployment started", attachments: [{fields: [{title: "Repository", value: $repo, short: true}, {title: "Ref", value: $ref, short: true}, {title: "Run URL", value: $url, short: true}]}]}')
          echo "PAYLOAD=$PAYLOAD" >> $GITHUB_ENV
      - <<: *slack_notify
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm ci

      - name: Deploy Sanity Studio
        run: npx sanity deploy --non-interactive

      # Success notification
      - name: Prepare Success Payload
        if: success()
        id: slack_success
        run: |
          PAYLOAD=$(jq -n --arg repo "$GITHUB_REPOSITORY" \
                         --arg ref "$GITHUB_REF_NAME" \
                         '{text: ":white_check_mark: Sanity Studio deployment succeeded", attachments: [{fields: [{title: "Repository", value: $repo, short: true}, {title: "Ref", value: $ref, short: true}]}]}')
          echo "PAYLOAD=$PAYLOAD" >> $GITHUB_ENV
      - if: success()
        <<: *slack_notify

      # Failure notification
      - name: Prepare Failure Payload
        if: failure()
        id: slack_failure
        run: |
          PAYLOAD=$(jq -n --arg repo "$GITHUB_REPOSITORY" \
                         --arg ref "$GITHUB_REF_NAME" \
                         '{text: ":x: Sanity Studio deployment failed", attachments: [{fields: [{title: "Repository", value: $repo, short: true}, {title: "Ref", value: $ref, short: true}]}]}')
          echo "PAYLOAD=$PAYLOAD" >> $GITHUB_ENV
      - if: failure()
        <<: *slack_notify
